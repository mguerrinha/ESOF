// Mocks generated by Mockito 5.4.4 from annotations
// in spantry/test/barcode_test/scan_barcode_widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:spantry/model/product.dart' as _i5;
import 'package:spantry/services/firestore/scan_barcode_handler.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpHandler_1 extends _i1.SmartFake implements _i3.HttpHandler {
  _FakeHttpHandler_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HttpHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpHandler extends _i1.Mock implements _i3.HttpHandler {
  MockHttpHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response> get(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
          ),
        )),
      ) as _i4.Future<_i2.Response>);
}

/// A class which mocks [ScanBarcodeHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockScanBarcodeHandler extends _i1.Mock
    implements _i3.ScanBarcodeHandler {
  MockScanBarcodeHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.HttpHandler get httpHandler => (super.noSuchMethod(
        Invocation.getter(#httpHandler),
        returnValue: _FakeHttpHandler_1(
          this,
          Invocation.getter(#httpHandler),
        ),
      ) as _i3.HttpHandler);

  @override
  _i4.Future<_i5.Product?> scanAndFetchProduct() => (super.noSuchMethod(
        Invocation.method(
          #scanAndFetchProduct,
          [],
        ),
        returnValue: _i4.Future<_i5.Product?>.value(),
      ) as _i4.Future<_i5.Product?>);

  @override
  _i4.Future<_i5.Product?> fetchProductDetails(String? barcode) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchProductDetails,
          [barcode],
        ),
        returnValue: _i4.Future<_i5.Product?>.value(),
      ) as _i4.Future<_i5.Product?>);
}
